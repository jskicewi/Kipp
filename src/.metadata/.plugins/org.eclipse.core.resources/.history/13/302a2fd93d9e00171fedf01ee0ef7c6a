package trivera.core.simpleclass;

public class Circle extends Shape {

	private double radius;
	private String name;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public double getRadius() {
		return radius;
	}

	public void setRadius(double radius) {
		this.radius = radius;
	}

	public Circle(double r) {
		radius = r;
	}
	@Override
	public double getArea() {
		return 3.14 * radius * radius;

	}

	public void grow() {
		radius *= 1.10; // radius = radius * 1.1
	}

	@Override
	public String toString() {
		return "This is a circle named: " + name + ", with a radius of: " + radius + ", and an area of: " + getArea();
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		long temp;
		temp = Double.doubleToLongBits(radius);
		result = prime * result + (int) (temp ^ (temp >>> 32));
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof Circle))
			return false;
		Circle other = (Circle) obj;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (Double.doubleToLongBits(radius) != Double.doubleToLongBits(other.radius))
			return false;
		return true;
	}

//	@Override
//	public boolean equals(Object obj) {
//		if (!(obj instanceof Circle))
//			return false;
//		// if (obj == null) return false;
//		if (this == obj)
//			return true;
//
//		Circle otherC = (Circle) obj;
//		return otherC.radius == radius;
//
//	}
//	@Override
//	public int hashCode() {
//	return (int)(radius * 100_000 * 31);
//	
//	}
	

}
